@page
@model DataVisualization.Pages.GetRequestModel
@{
}

<div class="text-center">
    <h1 class="displat-4">Air heater temperature</h1>
</div>





<script type="text/javascript">
    function ajaxTest() {
                $.ajax({
           url: '/GetRequest?handler=Filter',
           data: {
               FilterBy: "filt"
           }
        })
        .done(function (data) {
            console.log(data);
        });
    }
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    function ajaxTableTest() {
                $.ajax({
           url: '/GetRequest?handler=Table',
           data: {
               FilterBy: "filt"
           }
        })
        .done(function (data) {
            
            FillChart(data);
        });
    }




        google.charts.load('current', { 'packages': ['corechart'] });
        var intervalId = window.setInterval(function(){
            ajaxTableTest();
        }, 1000);

        function FillChart(data) {
            console.log(data);
            sensor1data = filterValuesByDescription(data,"sensor1");
            sensor2data = filterValuesByDescription(data,"sensor2");
            //console.log(filterValuesByDescription(data));
            indexes = range(0, sensor1data.length );
            tabledata = zip([indexes,sensor1data,sensor2data]);
            headers = [["Time","Setpoint","Measurement"]];
            let extendedArray = headers.concat(tabledata);
            //console.log(extendedArray);
            drawChart(extendedArray);
        }


        function drawChart(datavalues) {
            //datavalues = [["A","B"],[1,2],[2,3],[3,2],[4,3]]
            var data = google.visualization.arrayToDataTable(datavalues);

            var options = {
                title: 'Temperature',
                curveType: 'none',  /*'function',*/
                legend: { position: 'bottom' },
                hAxis: {title: "Time"},
                vAxis: {title: "Celcius"}
            };

            var chart = new google.visualization.LineChart(document.getElementById('myChart'));
            chart.draw(data, options);            
        }
        function filterValuesByDescription(data, filter) {            
            const filteredData = data.filter(item => item.description === filter);               
            const values = filteredData.map(item => item.value);    
            return values;
        }
        function range(start, stop, step = 1) {
            return Array.from({ length: Math.ceil((stop - start) / step) }, (_, i) => start + i * step);
        }
        function zip(arrays) {
            return arrays[0].map((_, i) => arrays.map(array => array[i]));
        }


</script>
 <div id="myChart" style="width: 900px; height: 500px">
     
     </div>